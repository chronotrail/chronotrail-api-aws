[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "chronotrail-api"
version = "1.0.0"
description = "Personal timeline data storage and natural language querying service"
readme = "README.md"
requires-python = ">=3.11"
authors = [
    {name = "ChronoTrail Team"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    # FastAPI and web framework
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "python-multipart>=0.0.6",  # For file uploads
    
    # Database
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
    "asyncpg>=0.29.0",  # PostgreSQL async driver
    "psycopg2-binary>=2.9.7",  # PostgreSQL sync driver
    
    # Data validation and serialization
    "pydantic>=2.4.0",
    "pydantic-settings>=2.0.0",
    "email-validator>=2.0.0",  # For EmailStr validation
    
    # AWS SDK and services
    "boto3>=1.34.0",
    "botocore>=1.34.0",
    "aioboto3>=12.0.0",  # Async boto3
    
    # Authentication and security
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    
    # HTTP client
    "httpx>=0.25.0",
    "aiofiles>=23.2.0",
    
    # OpenSearch client
    "opensearch-py>=2.4.0",
    
    # Image and audio processing
    "pillow>=10.0.0",
    "python-magic>=0.4.27",  # File type detection
    
    # Utilities
    "python-dotenv>=1.0.0",
    "structlog>=23.2.0",  # Structured logging
    "tenacity>=8.2.0",  # Retry logic
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.25.0",  # For testing FastAPI
    
    # Code quality
    "black>=23.9.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.6.0",
    
    # Development tools
    "pre-commit>=3.5.0",
]

[project.urls]
Homepage = "https://github.com/chronotrail/api"
Repository = "https://github.com/chronotrail/api.git"
Issues = "https://github.com/chronotrail/api/issues"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]